define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter_slidable/src/widgets/fractionnally_aligned_sized_box.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/gestures/drag_details.dart'], (function load__packages__flutter_slidable__src__widgets__slidable_dismissal_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter_slidable__src__widgets__fractionnally_aligned_sized_box$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__gestures__drag_details$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const ui = dart_sdk.ui;
  const _interceptors = dart_sdk._interceptors;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const transitions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__transitions;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const scrollable = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scrollable;
  const gesture_detector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__gesture_detector;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const automatic_keep_alive = packages__flutter__src__widgets__widget_span$46dart.src__widgets__automatic_keep_alive;
  const scroll_position = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_position;
  const tween = packages__flutter__src__animation__listener_helpers$46dart.src__animation__tween;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const fractionnally_aligned_sized_box = packages__flutter_slidable__src__widgets__fractionnally_aligned_sized_box$46dart.src__widgets__fractionnally_aligned_sized_box;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  var slidable_dismissal = Object.create(dart.library);
  var slidable$ = Object.create(dart.library);
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $_get = dartx._get;
  var $length = dartx.length;
  var $sign = dartx.sign;
  var $abs = dartx.abs;
  var $clamp = dartx.clamp;
  var $toDouble = dartx.toDouble;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    SlideActionTypeL: () => (T.SlideActionTypeL = dart.constFn(dart.legacy(slidable$.SlideActionType)))(),
    doubleL: () => (T.doubleL = dart.constFn(dart.legacy(core.double)))(),
    WidgetN: () => (T.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    BuildContextAndWidgetNToWidget: () => (T.BuildContextAndWidgetNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T.WidgetN()])))(),
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    TweenOfOffset: () => (T.TweenOfOffset = dart.constFn(tween.Tween$(ui.Offset)))(),
    IterableOfint: () => (T.IterableOfint = dart.constFn(core.Iterable$(core.int)))(),
    AnimationOfdouble: () => (T.AnimationOfdouble = dart.constFn(animation.Animation$(core.double)))(),
    TweenOfdouble: () => (T.TweenOfdouble = dart.constFn(tween.Tween$(core.double)))(),
    intToAnimationOfdouble: () => (T.intToAnimationOfdouble = dart.constFn(dart.fnType(T.AnimationOfdouble(), [core.int])))(),
    ListOfWidget: () => (T.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    intToFractionallyAlignedSizedBox: () => (T.intToFractionallyAlignedSizedBox = dart.constFn(dart.fnType(fractionnally_aligned_sized_box.FractionallyAlignedSizedBox, [core.int])))(),
    BuildContextAndWidgetNToPositioned: () => (T.BuildContextAndWidgetNToPositioned = dart.constFn(dart.fnType(basic.Positioned, [framework.BuildContext, T.WidgetN()])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    SlidableRenderingModeL: () => (T.SlidableRenderingModeL = dart.constFn(dart.legacy(slidable$.SlidableRenderingMode)))(),
    intToWidget: () => (T.intToWidget = dart.constFn(dart.fnType(framework.Widget, [core.int])))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    AnimationStatusTovoid: () => (T.AnimationStatusTovoid = dart.constFn(dart.fnType(dart.void, [animation.AnimationStatus])))(),
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.constMap(T.SlideActionTypeL(), T.doubleL(), []);
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 93,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 94,
        [_Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 101,
        [_Location_file]: null
      });
    },
    get C3() {
      return C[3] = dart.constList([C[4] || CT.C4, C[5] || CT.C5, C[6] || CT.C6], T._LocationL());
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[3] || CT.C3,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 92,
        [_Location_file]: "file:///C:/Users/canbe/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_slidable-0.6.0/lib/src/widgets/slidable_dismissal.dart"
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 19,
        [_Location_line]: 144,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.constList([C[9] || CT.C9], T._LocationL());
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[8] || CT.C8,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 143,
        [_Location_file]: "file:///C:/Users/canbe/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_slidable-0.6.0/lib/src/widgets/slidable_dismissal.dart"
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 143,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.constList([C[12] || CT.C12], T._LocationL());
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[11] || CT.C11,
        [_Location_name]: null,
        [_Location_column]: 33,
        [_Location_line]: 142,
        [_Location_file]: "file:///C:/Users/canbe/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_slidable-0.6.0/lib/src/widgets/slidable_dismissal.dart"
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 13,
        [_Location_line]: 140,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 13,
        [_Location_line]: 141,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.constList([C[15] || CT.C15, C[16] || CT.C16], T._LocationL());
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[14] || CT.C14,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 139,
        [_Location_file]: "file:///C:/Users/canbe/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_slidable-0.6.0/lib/src/widgets/slidable_dismissal.dart"
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 11,
        [_Location_line]: 161,
        [_Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 162,
        [_Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.constList([C[19] || CT.C19, C[20] || CT.C20], T._LocationL());
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[18] || CT.C18,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 160,
        [_Location_file]: "file:///C:/Users/canbe/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_slidable-0.6.0/lib/src/widgets/slidable_dismissal.dart"
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 138,
        [_Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.constList([C[23] || CT.C23], T._LocationL());
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[22] || CT.C22,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 137,
        [_Location_file]: "file:///C:/Users/canbe/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_slidable-0.6.0/lib/src/widgets/slidable_dismissal.dart"
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: slidable$.SlidableRenderingMode.prototype,
        [_name$]: "SlidableRenderingMode.none",
        index: 0
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: slidable$.SlidableRenderingMode.prototype,
        [_name$]: "SlidableRenderingMode.slide",
        index: 1
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: slidable$.SlidableRenderingMode.prototype,
        [_name$]: "SlidableRenderingMode.dismiss",
        index: 2
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: slidable$.SlidableRenderingMode.prototype,
        [_name$]: "SlidableRenderingMode.resize",
        index: 3
      });
    },
    get C28() {
      return C[28] = dart.constList([C[24] || CT.C24, C[25] || CT.C25, C[26] || CT.C26, C[27] || CT.C27], T.SlidableRenderingModeL());
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: slidable$.SlideActionType.prototype,
        [_name$]: "SlideActionType.primary",
        index: 0
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: slidable$.SlideActionType.prototype,
        [_name$]: "SlideActionType.secondary",
        index: 1
      });
    },
    get C31() {
      return C[31] = dart.constList([C[29] || CT.C29, C[30] || CT.C30], T.SlideActionTypeL());
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 7,
        [_Location_line]: 269,
        [_Location_file]: null
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "right",
        [_Location_column]: 7,
        [_Location_line]: 270,
        [_Location_file]: null
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 7,
        [_Location_line]: 271,
        [_Location_file]: null
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 7,
        [_Location_line]: 272,
        [_Location_file]: null
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 273,
        [_Location_file]: null
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 274,
        [_Location_file]: null
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 275,
        [_Location_file]: null
      });
    },
    get C33() {
      return C[33] = dart.constList([C[34] || CT.C34, C[35] || CT.C35, C[36] || CT.C36, C[37] || CT.C37, C[38] || CT.C38, C[39] || CT.C39, C[40] || CT.C40], T._LocationL());
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[33] || CT.C33,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 268,
        [_Location_file]: "file:///C:/Users/canbe/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_slidable-0.6.0/lib/src/widgets/slidable.dart"
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "leftFactor",
        [_Location_column]: 7,
        [_Location_line]: 286,
        [_Location_file]: null
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "rightFactor",
        [_Location_column]: 7,
        [_Location_line]: 288,
        [_Location_file]: null
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "topFactor",
        [_Location_column]: 7,
        [_Location_line]: 290,
        [_Location_file]: null
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottomFactor",
        [_Location_column]: 7,
        [_Location_line]: 291,
        [_Location_file]: null
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "widthFactor",
        [_Location_column]: 7,
        [_Location_line]: 293,
        [_Location_file]: null
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 7,
        [_Location_line]: 294,
        [_Location_file]: null
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 295,
        [_Location_file]: null
      });
    },
    get C42() {
      return C[42] = dart.constList([C[43] || CT.C43, C[44] || CT.C44, C[45] || CT.C45, C[46] || CT.C46, C[47] || CT.C47, C[48] || CT.C48, C[49] || CT.C49], T._LocationL());
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[42] || CT.C42,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 285,
        [_Location_file]: "file:///C:/Users/canbe/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_slidable-0.6.0/lib/src/widgets/slidable.dart"
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 200000
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: basic_types.Axis.prototype,
        [_name]: "Axis.horizontal",
        index: 0
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 17,
        [_Location_line]: 935,
        [_Location_file]: null
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 17,
        [_Location_line]: 936,
        [_Location_file]: null
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 937,
        [_Location_file]: null
      });
    },
    get C53() {
      return C[53] = dart.constList([C[54] || CT.C54, C[55] || CT.C55, C[56] || CT.C56], T._LocationL());
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[53] || CT.C53,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 934,
        [_Location_file]: "file:///C:/Users/canbe/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_slidable-0.6.0/lib/src/widgets/slidable.dart"
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sizeFactor",
        [_Location_column]: 15,
        [_Location_line]: 932,
        [_Location_file]: null
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axis",
        [_Location_column]: 15,
        [_Location_line]: 933,
        [_Location_file]: null
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 934,
        [_Location_file]: null
      });
    },
    get C58() {
      return C[58] = dart.constList([C[59] || CT.C59, C[60] || CT.C60, C[61] || CT.C61], T._LocationL());
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[58] || CT.C58,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 931,
        [_Location_file]: "file:///C:/Users/canbe/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_slidable-0.6.0/lib/src/widgets/slidable.dart"
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragStart",
        [_Location_column]: 9,
        [_Location_line]: 947,
        [_Location_file]: null
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragUpdate",
        [_Location_column]: 9,
        [_Location_line]: 948,
        [_Location_file]: null
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragEnd",
        [_Location_column]: 9,
        [_Location_line]: 949,
        [_Location_file]: null
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragStart",
        [_Location_column]: 9,
        [_Location_line]: 950,
        [_Location_file]: null
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragUpdate",
        [_Location_column]: 9,
        [_Location_line]: 951,
        [_Location_file]: null
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragEnd",
        [_Location_column]: 9,
        [_Location_line]: 952,
        [_Location_file]: null
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 9,
        [_Location_line]: 953,
        [_Location_file]: null
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 954,
        [_Location_file]: null
      });
    },
    get C63() {
      return C[63] = dart.constList([C[64] || CT.C64, C[65] || CT.C65, C[66] || CT.C66, C[67] || CT.C67, C[68] || CT.C68, C[69] || CT.C69, C[70] || CT.C70, C[71] || CT.C71], T._LocationL());
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[63] || CT.C63,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 946,
        [_Location_file]: "file:///C:/Users/canbe/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_slidable-0.6.0/lib/src/widgets/slidable.dart"
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actionType",
        [_Location_column]: 9,
        [_Location_line]: 961,
        [_Location_file]: null
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "renderingMode",
        [_Location_column]: 9,
        [_Location_line]: 962,
        [_Location_file]: null
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "totalActionsExtent",
        [_Location_column]: 9,
        [_Location_line]: 963,
        [_Location_file]: null
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dismissThreshold",
        [_Location_column]: 9,
        [_Location_line]: 964,
        [_Location_file]: null
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dismissible",
        [_Location_column]: 9,
        [_Location_line]: 965,
        [_Location_file]: null
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actionDelegate",
        [_Location_column]: 9,
        [_Location_line]: 966,
        [_Location_file]: null
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overallMoveAnimation",
        [_Location_column]: 9,
        [_Location_line]: 967,
        [_Location_file]: null
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actionsMoveAnimation",
        [_Location_column]: 9,
        [_Location_line]: 968,
        [_Location_file]: null
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dismissAnimation",
        [_Location_column]: 9,
        [_Location_line]: 969,
        [_Location_file]: null
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "slidable",
        [_Location_column]: 9,
        [_Location_line]: 970,
        [_Location_file]: null
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actionExtentRatio",
        [_Location_column]: 9,
        [_Location_line]: 971,
        [_Location_file]: null
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "direction",
        [_Location_column]: 9,
        [_Location_line]: 972,
        [_Location_file]: null
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 973,
        [_Location_file]: null
      });
    },
    get C73() {
      return C[73] = dart.constList([C[74] || CT.C74, C[75] || CT.C75, C[76] || CT.C76, C[77] || CT.C77, C[78] || CT.C78, C[79] || CT.C79, C[80] || CT.C80, C[81] || CT.C81, C[82] || CT.C82, C[83] || CT.C83, C[84] || CT.C84, C[85] || CT.C85, C[86] || CT.C86], T._LocationL());
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[73] || CT.C73,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 960,
        [_Location_file]: "file:///C:/Users/canbe/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_slidable-0.6.0/lib/src/widgets/slidable.dart"
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "state",
        [_Location_column]: 7,
        [_Location_line]: 959,
        [_Location_file]: null
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 960,
        [_Location_file]: null
      });
    },
    get C88() {
      return C[88] = dart.constList([C[89] || CT.C89, C[90] || CT.C90], T._LocationL());
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[88] || CT.C88,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 958,
        [_Location_file]: "file:///C:/Users/canbe/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_slidable-0.6.0/lib/src/widgets/slidable.dart"
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.25,
        [Cubic_b]: 0.1,
        [Cubic_a]: 0.25
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C[92] || CT.C92,
        [Interval_end]: 1,
        [Interval_begin]: 0.4
      });
    }
  }, false);
  var C = Array(93).fill(void 0);
  var I = [
    "file:///C:/Users/canbe/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_slidable-0.6.0/lib/src/widgets/slidable_dismissal.dart",
    "package:flutter_slidable/src/widgets/slidable_dismissal.dart",
    "file:///C:/Users/canbe/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_slidable-0.6.0/lib/src/widgets/slidable.dart",
    "package:flutter_slidable/src/widgets/slidable.dart"
  ];
  var dragDismissible$ = dart.privateName(slidable_dismissal, "SlidableDismissal.dragDismissible");
  var dismissThresholds$ = dart.privateName(slidable_dismissal, "SlidableDismissal.dismissThresholds");
  var onDismissed$ = dart.privateName(slidable_dismissal, "SlidableDismissal.onDismissed");
  var onWillDismiss$ = dart.privateName(slidable_dismissal, "SlidableDismissal.onWillDismiss");
  var closeOnCanceled$ = dart.privateName(slidable_dismissal, "SlidableDismissal.closeOnCanceled");
  var onResize$ = dart.privateName(slidable_dismissal, "SlidableDismissal.onResize");
  var resizeDuration$ = dart.privateName(slidable_dismissal, "SlidableDismissal.resizeDuration");
  var crossAxisEndOffset$ = dart.privateName(slidable_dismissal, "SlidableDismissal.crossAxisEndOffset");
  var child$ = dart.privateName(slidable_dismissal, "SlidableDismissal.child");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  slidable_dismissal.SlidableDismissal = class SlidableDismissal extends framework.StatelessWidget {
    get dragDismissible() {
      return this[dragDismissible$];
    }
    set dragDismissible(value) {
      super.dragDismissible = value;
    }
    get dismissThresholds() {
      return this[dismissThresholds$];
    }
    set dismissThresholds(value) {
      super.dismissThresholds = value;
    }
    get onDismissed() {
      return this[onDismissed$];
    }
    set onDismissed(value) {
      super.onDismissed = value;
    }
    get onWillDismiss() {
      return this[onWillDismiss$];
    }
    set onWillDismiss(value) {
      super.onWillDismiss = value;
    }
    get closeOnCanceled() {
      return this[closeOnCanceled$];
    }
    set closeOnCanceled(value) {
      super.closeOnCanceled = value;
    }
    get onResize() {
      return this[onResize$];
    }
    set onResize(value) {
      super.onResize = value;
    }
    get resizeDuration() {
      return this[resizeDuration$];
    }
    set resizeDuration(value) {
      super.resizeDuration = value;
    }
    get crossAxisEndOffset() {
      return this[crossAxisEndOffset$];
    }
    set crossAxisEndOffset(value) {
      super.crossAxisEndOffset = value;
    }
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 89, 29, "context");
      let data = dart.nullCheck(slidable$.SlidableData.of(context));
      return new transitions.AnimatedBuilder.new({animation: data.overallMoveAnimation, builder: dart.fn((context, child) => {
          if (context == null) dart.nullFailed(I[0], 94, 30, "context");
          if (dart.notNull(data.overallMoveAnimation.value) > dart.notNull(data.totalActionsExtent)) {
            return dart.nullCheck(child);
          } else {
            return data.slidable.actionPane;
          }
        }, T.BuildContextAndWidgetNToWidget()), child: this.child, $creationLocationd_0dea112b090073317d4: C[2] || CT.C2});
    }
  };
  (slidable_dismissal.SlidableDismissal.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[0], 22, 19, "child");
    let dismissThresholds = opts && 'dismissThresholds' in opts ? opts.dismissThresholds : C[0] || CT.C0;
    if (dismissThresholds == null) dart.nullFailed(I[0], 23, 10, "dismissThresholds");
    let onResize = opts && 'onResize' in opts ? opts.onResize : null;
    let onDismissed = opts && 'onDismissed' in opts ? opts.onDismissed : null;
    let resizeDuration = opts && 'resizeDuration' in opts ? opts.resizeDuration : C[1] || CT.C1;
    let crossAxisEndOffset = opts && 'crossAxisEndOffset' in opts ? opts.crossAxisEndOffset : 0;
    if (crossAxisEndOffset == null) dart.nullFailed(I[0], 27, 10, "crossAxisEndOffset");
    let onWillDismiss = opts && 'onWillDismiss' in opts ? opts.onWillDismiss : null;
    let closeOnCanceled = opts && 'closeOnCanceled' in opts ? opts.closeOnCanceled : false;
    if (closeOnCanceled == null) dart.nullFailed(I[0], 29, 10, "closeOnCanceled");
    let dragDismissible = opts && 'dragDismissible' in opts ? opts.dragDismissible : true;
    if (dragDismissible == null) dart.nullFailed(I[0], 30, 10, "dragDismissible");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$] = child;
    this[dismissThresholds$] = dismissThresholds;
    this[onResize$] = onResize;
    this[onDismissed$] = onDismissed;
    this[resizeDuration$] = resizeDuration;
    this[crossAxisEndOffset$] = crossAxisEndOffset;
    this[onWillDismiss$] = onWillDismiss;
    this[closeOnCanceled$] = closeOnCanceled;
    this[dragDismissible$] = dragDismissible;
    slidable_dismissal.SlidableDismissal.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = slidable_dismissal.SlidableDismissal.prototype;
  dart.addTypeTests(slidable_dismissal.SlidableDismissal);
  dart.addTypeCaches(slidable_dismissal.SlidableDismissal);
  dart.setMethodSignature(slidable_dismissal.SlidableDismissal, () => ({
    __proto__: dart.getMethods(slidable_dismissal.SlidableDismissal.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(slidable_dismissal.SlidableDismissal, I[1]);
  dart.setFieldSignature(slidable_dismissal.SlidableDismissal, () => ({
    __proto__: dart.getFields(slidable_dismissal.SlidableDismissal.__proto__),
    dragDismissible: dart.finalFieldType(core.bool),
    dismissThresholds: dart.finalFieldType(core.Map$(slidable$.SlideActionType, core.double)),
    onDismissed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [dart.nullable(slidable$.SlideActionType)]))),
    onWillDismiss: dart.finalFieldType(dart.nullable(dart.fnType(async.FutureOr$(core.bool), [dart.nullable(slidable$.SlideActionType)]))),
    closeOnCanceled: dart.finalFieldType(core.bool),
    onResize: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    resizeDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    crossAxisEndOffset: dart.finalFieldType(core.double),
    child: dart.finalFieldType(framework.Widget)
  }));
  slidable_dismissal.SlidableDrawerDismissal = class SlidableDrawerDismissal extends framework.StatelessWidget {
    build(context) {
      if (context == null) dart.nullFailed(I[0], 115, 29, "context");
      let data = dart.nullCheck(slidable$.SlidableData.of(context));
      let animation = new (T.TweenOfOffset()).new({begin: ui.Offset.zero, end: data.createOffset(data.actionSign)}).animate(data.overallMoveAnimation);
      let count = data.actionCount;
      let extentAnimations = T.IterableOfint().generate(count)[$map](T.AnimationOfdouble(), dart.fn(index => {
        if (index == null) dart.nullFailed(I[0], 125, 65, "index");
        return new (T.TweenOfdouble()).new({begin: data.actionExtentRatio, end: 1 - dart.notNull(data.actionExtentRatio) * (dart.notNull(data.actionCount) - dart.notNull(index) - 1)}).animate(new animations.CurvedAnimation.new({parent: data.overallMoveAnimation, curve: new curves.Interval.new(data.totalActionsExtent, 1.0)}));
      }, T.intToAnimationOfdouble()))[$toList]();
      return new basic.Stack.new({children: T.JSArrayOfWidget().of([new transitions.AnimatedBuilder.new({animation: data.overallMoveAnimation, builder: dart.fn((context, child) => {
              if (context == null) dart.nullFailed(I[0], 141, 23, "context");
              return new basic.Positioned.fill({child: new basic.Stack.new({children: T.ListOfWidget().generate(data.actionCount, dart.fn(index => {
                    if (index == null) dart.nullFailed(I[0], 144, 62, "index");
                    let displayIndex = dart.test(data.showActions) ? dart.notNull(data.actionCount) - dart.notNull(index) - 1 : index;
                    return data.createFractionallyAlignedSizedBox({positionFactor: dart.notNull(data.actionExtentRatio) * (dart.notNull(data.actionCount) - dart.notNull(index) - 1), extentFactor: extentAnimations[$_get](index).value, child: dart.nullCheck(data.actionDelegate).build(context, displayIndex, data.actionsMoveAnimation, data.renderingMode)});
                  }, T.intToFractionallyAlignedSizedBox())), $creationLocationd_0dea112b090073317d4: C[7] || CT.C7}), $creationLocationd_0dea112b090073317d4: C[10] || CT.C10});
            }, T.BuildContextAndWidgetNToPositioned()), $creationLocationd_0dea112b090073317d4: C[13] || CT.C13}), new transitions.SlideTransition.new({position: animation, child: data.slidable.child, $creationLocationd_0dea112b090073317d4: C[17] || CT.C17})]), $creationLocationd_0dea112b090073317d4: C[21] || CT.C21});
    }
  };
  (slidable_dismissal.SlidableDrawerDismissal.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    slidable_dismissal.SlidableDrawerDismissal.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = slidable_dismissal.SlidableDrawerDismissal.prototype;
  dart.addTypeTests(slidable_dismissal.SlidableDrawerDismissal);
  dart.addTypeCaches(slidable_dismissal.SlidableDrawerDismissal);
  dart.setMethodSignature(slidable_dismissal.SlidableDrawerDismissal, () => ({
    __proto__: dart.getMethods(slidable_dismissal.SlidableDrawerDismissal.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(slidable_dismissal.SlidableDrawerDismissal, I[1]);
  dart.defineLazy(slidable_dismissal, {
    /*slidable_dismissal._kResizeDuration*/get _kResizeDuration() {
      return C[1] || CT.C1;
    }
  }, false);
  var _name$ = dart.privateName(slidable$, "_name");
  slidable$.SlidableRenderingMode = class SlidableRenderingMode extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (slidable$.SlidableRenderingMode.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[2], 15, 6, "index");
    if (_name == null) dart.nullFailed(I[2], 15, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = slidable$.SlidableRenderingMode.prototype;
  dart.addTypeTests(slidable$.SlidableRenderingMode);
  dart.addTypeCaches(slidable$.SlidableRenderingMode);
  dart.setLibraryUri(slidable$.SlidableRenderingMode, I[3]);
  dart.setFieldSignature(slidable$.SlidableRenderingMode, () => ({
    __proto__: dart.getFields(slidable$.SlidableRenderingMode.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(slidable$.SlidableRenderingMode, ['toString']);
  slidable$.SlidableRenderingMode.none = C[24] || CT.C24;
  slidable$.SlidableRenderingMode.slide = C[25] || CT.C25;
  slidable$.SlidableRenderingMode.dismiss = C[26] || CT.C26;
  slidable$.SlidableRenderingMode.resize = C[27] || CT.C27;
  slidable$.SlidableRenderingMode.values = C[28] || CT.C28;
  slidable$.SlideActionType = class SlideActionType extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (slidable$.SlideActionType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[2], 30, 6, "index");
    if (_name == null) dart.nullFailed(I[2], 30, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = slidable$.SlideActionType.prototype;
  dart.addTypeTests(slidable$.SlideActionType);
  dart.addTypeCaches(slidable$.SlideActionType);
  dart.setLibraryUri(slidable$.SlideActionType, I[3]);
  dart.setFieldSignature(slidable$.SlideActionType, () => ({
    __proto__: dart.getFields(slidable$.SlideActionType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(slidable$.SlideActionType, ['toString']);
  slidable$.SlideActionType.primary = C[29] || CT.C29;
  slidable$.SlideActionType.secondary = C[30] || CT.C30;
  slidable$.SlideActionType.values = C[31] || CT.C31;
  slidable$.SlideActionDelegate = class SlideActionDelegate extends core.Object {};
  (slidable$.SlideActionDelegate.new = function() {
    ;
  }).prototype = slidable$.SlideActionDelegate.prototype;
  dart.addTypeTests(slidable$.SlideActionDelegate);
  dart.addTypeCaches(slidable$.SlideActionDelegate);
  dart.setLibraryUri(slidable$.SlideActionDelegate, I[3]);
  var builder$ = dart.privateName(slidable$, "SlideActionBuilderDelegate.builder");
  var actionCount$ = dart.privateName(slidable$, "SlideActionBuilderDelegate.actionCount");
  slidable$.SlideActionBuilderDelegate = class SlideActionBuilderDelegate extends slidable$.SlideActionDelegate {
    get builder() {
      return this[builder$];
    }
    set builder(value) {
      super.builder = value;
    }
    get actionCount() {
      return this[actionCount$];
    }
    set actionCount(value) {
      super.actionCount = value;
    }
    build(context, index, animation, step) {
      let t3, t2, t1, t0;
      if (context == null) dart.nullFailed(I[2], 112, 29, "context");
      if (index == null) dart.nullFailed(I[2], 112, 42, "index");
      if (step == null) dart.nullFailed(I[2], 113, 33, "step");
      t0 = context;
      t1 = index;
      t2 = animation;
      t3 = step;
      return this.builder(t0, t1, t2, t3);
    }
  };
  (slidable$.SlideActionBuilderDelegate.new = function(opts) {
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(I[2], 97, 19, "builder");
    let actionCount = opts && 'actionCount' in opts ? opts.actionCount : null;
    if (actionCount == null) dart.nullFailed(I[2], 98, 19, "actionCount");
    this[builder$] = builder;
    this[actionCount$] = actionCount;
    if (!(dart.notNull(actionCount) >= 0)) dart.assertFailed(null, I[2], 99, 15, "actionCount >= 0");
    slidable$.SlideActionBuilderDelegate.__proto__.new.call(this);
    ;
  }).prototype = slidable$.SlideActionBuilderDelegate.prototype;
  dart.addTypeTests(slidable$.SlideActionBuilderDelegate);
  dart.addTypeCaches(slidable$.SlideActionBuilderDelegate);
  dart.setMethodSignature(slidable$.SlideActionBuilderDelegate, () => ({
    __proto__: dart.getMethods(slidable$.SlideActionBuilderDelegate.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext, core.int, dart.nullable(animation.Animation$(core.double)), slidable$.SlidableRenderingMode])
  }));
  dart.setLibraryUri(slidable$.SlideActionBuilderDelegate, I[3]);
  dart.setFieldSignature(slidable$.SlideActionBuilderDelegate, () => ({
    __proto__: dart.getFields(slidable$.SlideActionBuilderDelegate.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, core.int, dart.nullable(animation.Animation$(core.double)), slidable$.SlidableRenderingMode])),
    actionCount: dart.finalFieldType(core.int)
  }));
  var actions$ = dart.privateName(slidable$, "SlideActionListDelegate.actions");
  slidable$.SlideActionListDelegate = class SlideActionListDelegate extends slidable$.SlideActionDelegate {
    get actions() {
      return this[actions$];
    }
    set actions(value) {
      super.actions = value;
    }
    get actionCount() {
      let t0, t0$;
      t0$ = (t0 = this.actions, t0 == null ? null : t0[$length]);
      return t0$ == null ? 0 : t0$;
    }
    build(context, index, animation, step) {
      if (context == null) dart.nullFailed(I[2], 144, 29, "context");
      if (index == null) dart.nullFailed(I[2], 144, 42, "index");
      if (step == null) dart.nullFailed(I[2], 145, 33, "step");
      return dart.nullCheck(this.actions)[$_get](index);
    }
  };
  (slidable$.SlideActionListDelegate.new = function(opts) {
    let actions = opts && 'actions' in opts ? opts.actions : null;
    this[actions$] = actions;
    slidable$.SlideActionListDelegate.__proto__.new.call(this);
    ;
  }).prototype = slidable$.SlideActionListDelegate.prototype;
  dart.addTypeTests(slidable$.SlideActionListDelegate);
  dart.addTypeCaches(slidable$.SlideActionListDelegate);
  dart.setMethodSignature(slidable$.SlideActionListDelegate, () => ({
    __proto__: dart.getMethods(slidable$.SlideActionListDelegate.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext, core.int, dart.nullable(animation.Animation$(core.double)), slidable$.SlidableRenderingMode])
  }));
  dart.setGetterSignature(slidable$.SlideActionListDelegate, () => ({
    __proto__: dart.getGetters(slidable$.SlideActionListDelegate.__proto__),
    actionCount: core.int
  }));
  dart.setLibraryUri(slidable$.SlideActionListDelegate, I[3]);
  dart.setFieldSignature(slidable$.SlideActionListDelegate, () => ({
    __proto__: dart.getFields(slidable$.SlideActionListDelegate.__proto__),
    actions: dart.finalFieldType(dart.nullable(core.List$(framework.Widget)))
  }));
  var state$ = dart.privateName(slidable$, "_SlidableScope.state");
  slidable$._SlidableScope = class _SlidableScope extends framework.InheritedWidget {
    get state() {
      return this[state$];
    }
    set state(value) {
      super.state = value;
    }
    updateShouldNotify(oldWidget) {
      slidable$._SlidableScope.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[2], 159, 42, "oldWidget");
      return !dart.equals(oldWidget.state, this.state);
    }
  };
  (slidable$._SlidableScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let state = opts && 'state' in opts ? opts.state : null;
    if (state == null) dart.nullFailed(I[2], 152, 19, "state");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[2], 153, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[state$] = state;
    slidable$._SlidableScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = slidable$._SlidableScope.prototype;
  dart.addTypeTests(slidable$._SlidableScope);
  dart.addTypeCaches(slidable$._SlidableScope);
  dart.setMethodSignature(slidable$._SlidableScope, () => ({
    __proto__: dart.getMethods(slidable$._SlidableScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(slidable$._SlidableScope, I[3]);
  dart.setFieldSignature(slidable$._SlidableScope, () => ({
    __proto__: dart.getFields(slidable$._SlidableScope.__proto__),
    state: dart.finalFieldType(slidable$.SlidableState)
  }));
  var actionType$ = dart.privateName(slidable$, "SlidableData.actionType");
  var renderingMode$ = dart.privateName(slidable$, "SlidableData.renderingMode");
  var totalActionsExtent$ = dart.privateName(slidable$, "SlidableData.totalActionsExtent");
  var dismissThreshold$ = dart.privateName(slidable$, "SlidableData.dismissThreshold");
  var dismissible$ = dart.privateName(slidable$, "SlidableData.dismissible");
  var actionDelegate$ = dart.privateName(slidable$, "SlidableData.actionDelegate");
  var overallMoveAnimation$ = dart.privateName(slidable$, "SlidableData.overallMoveAnimation");
  var actionsMoveAnimation$ = dart.privateName(slidable$, "SlidableData.actionsMoveAnimation");
  var dismissAnimation$ = dart.privateName(slidable$, "SlidableData.dismissAnimation");
  var slidable$0 = dart.privateName(slidable$, "SlidableData.slidable");
  var actionExtentRatio$ = dart.privateName(slidable$, "SlidableData.actionExtentRatio");
  var direction$ = dart.privateName(slidable$, "SlidableData.direction");
  slidable$.SlidableData = class SlidableData extends framework.InheritedWidget {
    get actionType() {
      return this[actionType$];
    }
    set actionType(value) {
      super.actionType = value;
    }
    get renderingMode() {
      return this[renderingMode$];
    }
    set renderingMode(value) {
      super.renderingMode = value;
    }
    get totalActionsExtent() {
      return this[totalActionsExtent$];
    }
    set totalActionsExtent(value) {
      super.totalActionsExtent = value;
    }
    get dismissThreshold() {
      return this[dismissThreshold$];
    }
    set dismissThreshold(value) {
      super.dismissThreshold = value;
    }
    get dismissible() {
      return this[dismissible$];
    }
    set dismissible(value) {
      super.dismissible = value;
    }
    get actionDelegate() {
      return this[actionDelegate$];
    }
    set actionDelegate(value) {
      super.actionDelegate = value;
    }
    get overallMoveAnimation() {
      return this[overallMoveAnimation$];
    }
    set overallMoveAnimation(value) {
      super.overallMoveAnimation = value;
    }
    get actionsMoveAnimation() {
      return this[actionsMoveAnimation$];
    }
    set actionsMoveAnimation(value) {
      super.actionsMoveAnimation = value;
    }
    get dismissAnimation() {
      return this[dismissAnimation$];
    }
    set dismissAnimation(value) {
      super.dismissAnimation = value;
    }
    get slidable() {
      return this[slidable$0];
    }
    set slidable(value) {
      super.slidable = value;
    }
    get actionExtentRatio() {
      return this[actionExtentRatio$];
    }
    set actionExtentRatio(value) {
      super.actionExtentRatio = value;
    }
    get direction() {
      return this[direction$];
    }
    set direction(value) {
      super.direction = value;
    }
    get showActions() {
      return this.actionType == slidable$.SlideActionType.primary;
    }
    get actionCount() {
      let t0, t0$;
      t0$ = (t0 = this.actionDelegate, t0 == null ? null : t0.actionCount);
      return t0$ == null ? 0 : t0$;
    }
    get actionSign() {
      return this.actionType == slidable$.SlideActionType.primary ? 1.0 : -1.0;
    }
    get directionIsXAxis() {
      return this.direction == basic_types.Axis.horizontal;
    }
    get alignment() {
      return new alignment.Alignment.new(dart.test(this.directionIsXAxis) ? -dart.notNull(this.actionSign) : 0.0, dart.test(this.directionIsXAxis) ? 0.0 : -dart.notNull(this.actionSign));
    }
    get actionPaneWidthFactor() {
      return dart.test(this.directionIsXAxis) ? this.totalActionsExtent : null;
    }
    get actionPaneHeightFactor() {
      return dart.test(this.directionIsXAxis) ? null : this.totalActionsExtent;
    }
    static of(context) {
      if (context == null) dart.nullFailed(I[2], 248, 40, "context");
      return context.dependOnInheritedWidgetOfExactType(slidable$.SlidableData);
    }
    createOffset(value) {
      if (value == null) dart.nullFailed(I[2], 253, 30, "value");
      return dart.test(this.directionIsXAxis) ? new ui.Offset.new(value, 0.0) : new ui.Offset.new(0.0, value);
    }
    getMaxExtent(constraints) {
      if (constraints == null) dart.nullFailed(I[2], 258, 38, "constraints");
      return dart.test(this.directionIsXAxis) ? constraints.maxWidth : constraints.maxHeight;
    }
    createPositioned(opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(I[2], 264, 21, "child");
      let extent = opts && 'extent' in opts ? opts.extent : null;
      let position = opts && 'position' in opts ? opts.position : null;
      return new basic.Positioned.new({left: dart.test(this.directionIsXAxis) ? dart.test(this.showActions) ? position : null : 0.0, right: dart.test(this.directionIsXAxis) ? dart.test(this.showActions) ? null : position : 0.0, top: dart.test(this.directionIsXAxis) ? 0.0 : dart.test(this.showActions) ? position : null, bottom: dart.test(this.directionIsXAxis) ? 0.0 : dart.test(this.showActions) ? null : position, width: dart.test(this.directionIsXAxis) ? extent : null, height: dart.test(this.directionIsXAxis) ? null : extent, child: child, $creationLocationd_0dea112b090073317d4: C[32] || CT.C32});
    }
    createFractionallyAlignedSizedBox(opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(I[2], 281, 21, "child");
      let extentFactor = opts && 'extentFactor' in opts ? opts.extentFactor : null;
      let positionFactor = opts && 'positionFactor' in opts ? opts.positionFactor : null;
      return new fractionnally_aligned_sized_box.FractionallyAlignedSizedBox.new({leftFactor: dart.test(this.directionIsXAxis) ? dart.test(this.showActions) ? positionFactor : null : 0.0, rightFactor: dart.test(this.directionIsXAxis) ? dart.test(this.showActions) ? null : positionFactor : 0.0, topFactor: dart.test(this.directionIsXAxis) ? 0.0 : dart.test(this.showActions) ? positionFactor : null, bottomFactor: dart.test(this.directionIsXAxis) ? 0.0 : dart.test(this.showActions) ? null : positionFactor, widthFactor: dart.test(this.directionIsXAxis) ? extentFactor : null, heightFactor: dart.test(this.directionIsXAxis) ? null : extentFactor, child: child, $creationLocationd_0dea112b090073317d4: C[41] || CT.C41});
    }
    buildActions(context) {
      if (context == null) dart.nullFailed(I[2], 300, 42, "context");
      return T.ListOfWidget().generate(this.actionCount, dart.fn(index => {
        if (index == null) dart.nullFailed(I[2], 303, 12, "index");
        return dart.nullCheck(this.actionDelegate).build(context, index, this.actionsMoveAnimation, slidable$.SlidableRenderingMode.slide);
      }, T.intToWidget()));
    }
    updateShouldNotify(oldWidget) {
      slidable$.SlidableData.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[2], 314, 40, "oldWidget");
      return oldWidget.actionType != this.actionType || oldWidget.renderingMode != this.renderingMode || oldWidget.totalActionsExtent != this.totalActionsExtent || oldWidget.dismissThreshold != this.dismissThreshold || oldWidget.dismissible != this.dismissible || !dart.equals(oldWidget.actionDelegate, this.actionDelegate) || !dart.equals(oldWidget.overallMoveAnimation, this.overallMoveAnimation) || !dart.equals(oldWidget.actionsMoveAnimation, this.actionsMoveAnimation) || !dart.equals(oldWidget.dismissAnimation, this.dismissAnimation) || !dart.equals(oldWidget.slidable, this.slidable) || oldWidget.actionExtentRatio != this.actionExtentRatio || oldWidget.direction != this.direction;
    }
  };
  (slidable$.SlidableData.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let actionType = opts && 'actionType' in opts ? opts.actionType : null;
    let renderingMode = opts && 'renderingMode' in opts ? opts.renderingMode : null;
    if (renderingMode == null) dart.nullFailed(I[2], 168, 19, "renderingMode");
    let totalActionsExtent = opts && 'totalActionsExtent' in opts ? opts.totalActionsExtent : null;
    if (totalActionsExtent == null) dart.nullFailed(I[2], 169, 19, "totalActionsExtent");
    let dismissThreshold = opts && 'dismissThreshold' in opts ? opts.dismissThreshold : null;
    if (dismissThreshold == null) dart.nullFailed(I[2], 170, 19, "dismissThreshold");
    let dismissible = opts && 'dismissible' in opts ? opts.dismissible : null;
    if (dismissible == null) dart.nullFailed(I[2], 171, 19, "dismissible");
    let actionDelegate = opts && 'actionDelegate' in opts ? opts.actionDelegate : null;
    let overallMoveAnimation = opts && 'overallMoveAnimation' in opts ? opts.overallMoveAnimation : null;
    if (overallMoveAnimation == null) dart.nullFailed(I[2], 173, 19, "overallMoveAnimation");
    let actionsMoveAnimation = opts && 'actionsMoveAnimation' in opts ? opts.actionsMoveAnimation : null;
    let dismissAnimation = opts && 'dismissAnimation' in opts ? opts.dismissAnimation : null;
    let slidable = opts && 'slidable' in opts ? opts.slidable : null;
    if (slidable == null) dart.nullFailed(I[2], 176, 19, "slidable");
    let actionExtentRatio = opts && 'actionExtentRatio' in opts ? opts.actionExtentRatio : null;
    if (actionExtentRatio == null) dart.nullFailed(I[2], 177, 19, "actionExtentRatio");
    let direction = opts && 'direction' in opts ? opts.direction : null;
    if (direction == null) dart.nullFailed(I[2], 178, 19, "direction");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[2], 179, 21, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[actionType$] = actionType;
    this[renderingMode$] = renderingMode;
    this[totalActionsExtent$] = totalActionsExtent;
    this[dismissThreshold$] = dismissThreshold;
    this[dismissible$] = dismissible;
    this[actionDelegate$] = actionDelegate;
    this[overallMoveAnimation$] = overallMoveAnimation;
    this[actionsMoveAnimation$] = actionsMoveAnimation;
    this[dismissAnimation$] = dismissAnimation;
    this[slidable$0] = slidable;
    this[actionExtentRatio$] = actionExtentRatio;
    this[direction$] = direction;
    slidable$.SlidableData.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = slidable$.SlidableData.prototype;
  dart.addTypeTests(slidable$.SlidableData);
  dart.addTypeCaches(slidable$.SlidableData);
  dart.setMethodSignature(slidable$.SlidableData, () => ({
    __proto__: dart.getMethods(slidable$.SlidableData.__proto__),
    createOffset: dart.fnType(ui.Offset, [core.double]),
    getMaxExtent: dart.fnType(core.double, [box.BoxConstraints]),
    createPositioned: dart.fnType(basic.Positioned, [], {extent: dart.nullable(core.double), position: dart.nullable(core.double)}, {child: framework.Widget}),
    createFractionallyAlignedSizedBox: dart.fnType(fractionnally_aligned_sized_box.FractionallyAlignedSizedBox, [], {extentFactor: dart.nullable(core.double), positionFactor: dart.nullable(core.double)}, {child: framework.Widget}),
    buildActions: dart.fnType(core.List$(framework.Widget), [framework.BuildContext]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(slidable$.SlidableData, () => ({
    __proto__: dart.getGetters(slidable$.SlidableData.__proto__),
    showActions: core.bool,
    actionCount: core.int,
    actionSign: core.double,
    directionIsXAxis: core.bool,
    alignment: alignment.Alignment,
    actionPaneWidthFactor: dart.nullable(core.double),
    actionPaneHeightFactor: dart.nullable(core.double)
  }));
  dart.setLibraryUri(slidable$.SlidableData, I[3]);
  dart.setFieldSignature(slidable$.SlidableData, () => ({
    __proto__: dart.getFields(slidable$.SlidableData.__proto__),
    actionType: dart.finalFieldType(dart.nullable(slidable$.SlideActionType)),
    renderingMode: dart.finalFieldType(slidable$.SlidableRenderingMode),
    totalActionsExtent: dart.finalFieldType(core.double),
    dismissThreshold: dart.finalFieldType(core.double),
    dismissible: dart.finalFieldType(core.bool),
    actionDelegate: dart.finalFieldType(dart.nullable(slidable$.SlideActionDelegate)),
    overallMoveAnimation: dart.finalFieldType(animation.Animation$(core.double)),
    actionsMoveAnimation: dart.finalFieldType(dart.nullable(animation.Animation$(core.double))),
    dismissAnimation: dart.finalFieldType(dart.nullable(animation.Animation$(core.double))),
    slidable: dart.finalFieldType(slidable$.Slidable),
    actionExtentRatio: dart.finalFieldType(core.double),
    direction: dart.finalFieldType(basic_types.Axis)
  }));
  var onSlideAnimationChanged$ = dart.privateName(slidable$, "SlidableController.onSlideAnimationChanged");
  var onSlideIsOpenChanged$ = dart.privateName(slidable$, "SlidableController.onSlideIsOpenChanged");
  var _isSlideOpen = dart.privateName(slidable$, "_isSlideOpen");
  var _slideAnimation = dart.privateName(slidable$, "_slideAnimation");
  var _activeState = dart.privateName(slidable$, "_activeState");
  var _flingAnimationController = dart.privateName(slidable$, "_flingAnimationController");
  var _handleSlideIsOpenChanged = dart.privateName(slidable$, "_handleSlideIsOpenChanged");
  slidable$.SlidableController = class SlidableController extends core.Object {
    get onSlideAnimationChanged() {
      return this[onSlideAnimationChanged$];
    }
    set onSlideAnimationChanged(value) {
      super.onSlideAnimationChanged = value;
    }
    get onSlideIsOpenChanged() {
      return this[onSlideIsOpenChanged$];
    }
    set onSlideIsOpenChanged(value) {
      super.onSlideIsOpenChanged = value;
    }
    get activeState() {
      return this[_activeState];
    }
    set activeState(value) {
      let t0, t0$, t0$0, t0$1, t0$2;
      t0 = this[_activeState];
      t0 == null ? null : t0[_flingAnimationController]();
      this[_activeState] = value;
      if (this.onSlideAnimationChanged != null) {
        t0$ = this[_slideAnimation];
        t0$ == null ? null : t0$.removeListener(dart.bind(this, _handleSlideIsOpenChanged));
        if (this.onSlideIsOpenChanged != null) {
          this[_slideAnimation] = (t0$0 = value, t0$0 == null ? null : t0$0.overallMoveAnimation);
          t0$1 = this[_slideAnimation];
          t0$1 == null ? null : t0$1.addListener(dart.bind(this, _handleSlideIsOpenChanged));
          if (this[_slideAnimation] == null) {
            this[_isSlideOpen] = false;
            dart.nullCheck(this.onSlideIsOpenChanged)(this[_isSlideOpen]);
          }
        }
        dart.nullCheck(this.onSlideAnimationChanged)((t0$2 = value, t0$2 == null ? null : t0$2.overallMoveAnimation));
      }
    }
    [_handleSlideIsOpenChanged]() {
      if (this.onSlideIsOpenChanged != null && this[_slideAnimation] != null) {
        let isOpen = dart.nullCheck(this[_slideAnimation]).value !== 0.0;
        if (isOpen !== this[_isSlideOpen]) {
          this[_isSlideOpen] = isOpen;
          dart.nullCheck(this.onSlideIsOpenChanged)(this[_isSlideOpen]);
        }
      }
    }
  };
  (slidable$.SlidableController.new = function(opts) {
    let onSlideAnimationChanged = opts && 'onSlideAnimationChanged' in opts ? opts.onSlideAnimationChanged : null;
    let onSlideIsOpenChanged = opts && 'onSlideIsOpenChanged' in opts ? opts.onSlideIsOpenChanged : null;
    this[_isSlideOpen] = null;
    this[_slideAnimation] = null;
    this[_activeState] = null;
    this[onSlideAnimationChanged$] = onSlideAnimationChanged;
    this[onSlideIsOpenChanged$] = onSlideIsOpenChanged;
    ;
  }).prototype = slidable$.SlidableController.prototype;
  dart.addTypeTests(slidable$.SlidableController);
  dart.addTypeCaches(slidable$.SlidableController);
  dart.setMethodSignature(slidable$.SlidableController, () => ({
    __proto__: dart.getMethods(slidable$.SlidableController.__proto__),
    [_handleSlideIsOpenChanged]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(slidable$.SlidableController, () => ({
    __proto__: dart.getGetters(slidable$.SlidableController.__proto__),
    activeState: dart.nullable(slidable$.SlidableState)
  }));
  dart.setSetterSignature(slidable$.SlidableController, () => ({
    __proto__: dart.getSetters(slidable$.SlidableController.__proto__),
    activeState: dart.nullable(slidable$.SlidableState)
  }));
  dart.setLibraryUri(slidable$.SlidableController, I[3]);
  dart.setFieldSignature(slidable$.SlidableController, () => ({
    __proto__: dart.getFields(slidable$.SlidableController.__proto__),
    onSlideAnimationChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [dart.nullable(animation.Animation$(core.double))]))),
    onSlideIsOpenChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [dart.nullable(core.bool)]))),
    [_isSlideOpen]: dart.fieldType(dart.nullable(core.bool)),
    [_slideAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [_activeState]: dart.fieldType(dart.nullable(slidable$.SlidableState))
  }));
  var child$0 = dart.privateName(slidable$, "Slidable.child");
  var controller$ = dart.privateName(slidable$, "Slidable.controller");
  var actionDelegate$0 = dart.privateName(slidable$, "Slidable.actionDelegate");
  var secondaryActionDelegate$ = dart.privateName(slidable$, "Slidable.secondaryActionDelegate");
  var actionPane$ = dart.privateName(slidable$, "Slidable.actionPane");
  var dismissal$ = dart.privateName(slidable$, "Slidable.dismissal");
  var actionExtentRatio$0 = dart.privateName(slidable$, "Slidable.actionExtentRatio");
  var direction$0 = dart.privateName(slidable$, "Slidable.direction");
  var showAllActionsThreshold$ = dart.privateName(slidable$, "Slidable.showAllActionsThreshold");
  var movementDuration$ = dart.privateName(slidable$, "Slidable.movementDuration");
  var closeOnScroll$ = dart.privateName(slidable$, "Slidable.closeOnScroll");
  var enabled$ = dart.privateName(slidable$, "Slidable.enabled");
  var fastThreshold$ = dart.privateName(slidable$, "Slidable.fastThreshold");
  var _name = dart.privateName(basic_types, "_name");
  slidable$.Slidable = class Slidable extends framework.StatefulWidget {
    get child() {
      return this[child$0];
    }
    set child(value) {
      super.child = value;
    }
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    get actionDelegate() {
      return this[actionDelegate$0];
    }
    set actionDelegate(value) {
      super.actionDelegate = value;
    }
    get secondaryActionDelegate() {
      return this[secondaryActionDelegate$];
    }
    set secondaryActionDelegate(value) {
      super.secondaryActionDelegate = value;
    }
    get actionPane() {
      return this[actionPane$];
    }
    set actionPane(value) {
      super.actionPane = value;
    }
    get dismissal() {
      return this[dismissal$];
    }
    set dismissal(value) {
      super.dismissal = value;
    }
    get actionExtentRatio() {
      return this[actionExtentRatio$0];
    }
    set actionExtentRatio(value) {
      super.actionExtentRatio = value;
    }
    get direction() {
      return this[direction$0];
    }
    set direction(value) {
      super.direction = value;
    }
    get showAllActionsThreshold() {
      return this[showAllActionsThreshold$];
    }
    set showAllActionsThreshold(value) {
      super.showAllActionsThreshold = value;
    }
    get movementDuration() {
      return this[movementDuration$];
    }
    set movementDuration(value) {
      super.movementDuration = value;
    }
    get closeOnScroll() {
      return this[closeOnScroll$];
    }
    set closeOnScroll(value) {
      super.closeOnScroll = value;
    }
    get enabled() {
      return this[enabled$];
    }
    set enabled(value) {
      super.enabled = value;
    }
    get fastThreshold() {
      return this[fastThreshold$];
    }
    set fastThreshold(value) {
      super.fastThreshold = value;
    }
    static of(context) {
      let t0;
      if (context == null) dart.nullFailed(I[2], 532, 41, "context");
      let scope = context.dependOnInheritedWidgetOfExactType(slidable$._SlidableScope);
      t0 = scope;
      return t0 == null ? null : t0.state;
    }
    createState() {
      return new slidable$.SlidableState.new();
    }
  };
  (slidable$.Slidable.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[2], 408, 21, "child");
    let actionPane = opts && 'actionPane' in opts ? opts.actionPane : null;
    if (actionPane == null) dart.nullFailed(I[2], 409, 21, "actionPane");
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let secondaryActions = opts && 'secondaryActions' in opts ? opts.secondaryActions : null;
    let showAllActionsThreshold = opts && 'showAllActionsThreshold' in opts ? opts.showAllActionsThreshold : 0.5;
    if (showAllActionsThreshold == null) dart.nullFailed(I[2], 412, 12, "showAllActionsThreshold");
    let actionExtentRatio = opts && 'actionExtentRatio' in opts ? opts.actionExtentRatio : 0.25;
    if (actionExtentRatio == null) dart.nullFailed(I[2], 413, 12, "actionExtentRatio");
    let movementDuration = opts && 'movementDuration' in opts ? opts.movementDuration : C[50] || CT.C50;
    if (movementDuration == null) dart.nullFailed(I[2], 414, 14, "movementDuration");
    let direction = opts && 'direction' in opts ? opts.direction : C[51] || CT.C51;
    if (direction == null) dart.nullFailed(I[2], 415, 10, "direction");
    let closeOnScroll = opts && 'closeOnScroll' in opts ? opts.closeOnScroll : true;
    if (closeOnScroll == null) dart.nullFailed(I[2], 416, 10, "closeOnScroll");
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    if (enabled == null) dart.nullFailed(I[2], 417, 10, "enabled");
    let dismissal = opts && 'dismissal' in opts ? opts.dismissal : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let fastThreshold = opts && 'fastThreshold' in opts ? opts.fastThreshold : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    slidable$.Slidable.builder.call(this, {key: key, child: child, actionPane: actionPane, actionDelegate: new slidable$.SlideActionListDelegate.new({actions: actions}), secondaryActionDelegate: new slidable$.SlideActionListDelegate.new({actions: secondaryActions}), showAllActionsThreshold: showAllActionsThreshold, actionExtentRatio: actionExtentRatio, movementDuration: movementDuration, direction: direction, closeOnScroll: closeOnScroll, enabled: enabled, dismissal: dismissal, controller: controller, fastThreshold: fastThreshold, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
  }).prototype = slidable$.Slidable.prototype;
  (slidable$.Slidable.builder = function(opts) {
    let t0;
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[2], 456, 19, "child");
    let actionPane = opts && 'actionPane' in opts ? opts.actionPane : null;
    if (actionPane == null) dart.nullFailed(I[2], 457, 19, "actionPane");
    let actionDelegate = opts && 'actionDelegate' in opts ? opts.actionDelegate : null;
    let secondaryActionDelegate = opts && 'secondaryActionDelegate' in opts ? opts.secondaryActionDelegate : null;
    let showAllActionsThreshold = opts && 'showAllActionsThreshold' in opts ? opts.showAllActionsThreshold : 0.5;
    if (showAllActionsThreshold == null) dart.nullFailed(I[2], 460, 10, "showAllActionsThreshold");
    let actionExtentRatio = opts && 'actionExtentRatio' in opts ? opts.actionExtentRatio : 0.25;
    if (actionExtentRatio == null) dart.nullFailed(I[2], 461, 10, "actionExtentRatio");
    let movementDuration = opts && 'movementDuration' in opts ? opts.movementDuration : C[50] || CT.C50;
    if (movementDuration == null) dart.nullFailed(I[2], 462, 10, "movementDuration");
    let direction = opts && 'direction' in opts ? opts.direction : C[51] || CT.C51;
    if (direction == null) dart.nullFailed(I[2], 463, 10, "direction");
    let closeOnScroll = opts && 'closeOnScroll' in opts ? opts.closeOnScroll : true;
    if (closeOnScroll == null) dart.nullFailed(I[2], 464, 10, "closeOnScroll");
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    if (enabled == null) dart.nullFailed(I[2], 465, 10, "enabled");
    let dismissal = opts && 'dismissal' in opts ? opts.dismissal : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let fastThreshold = opts && 'fastThreshold' in opts ? opts.fastThreshold : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$0] = child;
    this[actionPane$] = actionPane;
    this[actionDelegate$0] = actionDelegate;
    this[secondaryActionDelegate$] = secondaryActionDelegate;
    this[showAllActionsThreshold$] = showAllActionsThreshold;
    this[actionExtentRatio$0] = actionExtentRatio;
    this[movementDuration$] = movementDuration;
    this[direction$0] = direction;
    this[closeOnScroll$] = closeOnScroll;
    this[enabled$] = enabled;
    this[dismissal$] = dismissal;
    this[controller$] = controller;
    if (!(dart.notNull(showAllActionsThreshold) >= 0.0 && dart.notNull(showAllActionsThreshold) <= 1.0)) dart.assertFailed("showAllActionsThreshold must be between 0.0 and 1.0", I[2], 469, 16, "showAllActionsThreshold >= .0 && showAllActionsThreshold <= 1.0");
    if (!(dart.notNull(actionExtentRatio) >= 0.0 && dart.notNull(actionExtentRatio) <= 1.0)) dart.assertFailed("actionExtentRatio must be between 0.0 and 1.0", I[2], 471, 16, "actionExtentRatio >= .0 && actionExtentRatio <= 1.0");
    if (!(dismissal == null || key != null)) dart.assertFailed("a key must be provided if slideToDismissDelegate is set", I[2], 473, 16, "dismissal == null || key != null");
    if (!(fastThreshold == null || dart.notNull(fastThreshold) >= 0.0)) dart.assertFailed("fastThreshold must be positive", I[2], 475, 16, "fastThreshold == null || fastThreshold >= .0");
    this[fastThreshold$] = (t0 = fastThreshold, t0 == null ? 2500 : t0);
    slidable$.Slidable.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = slidable$.Slidable.prototype;
  dart.addTypeTests(slidable$.Slidable);
  dart.addTypeCaches(slidable$.Slidable);
  dart.setMethodSignature(slidable$.Slidable, () => ({
    __proto__: dart.getMethods(slidable$.Slidable.__proto__),
    createState: dart.fnType(slidable$.SlidableState, [])
  }));
  dart.setLibraryUri(slidable$.Slidable, I[3]);
  dart.setFieldSignature(slidable$.Slidable, () => ({
    __proto__: dart.getFields(slidable$.Slidable.__proto__),
    child: dart.finalFieldType(framework.Widget),
    controller: dart.finalFieldType(dart.nullable(slidable$.SlidableController)),
    actionDelegate: dart.finalFieldType(dart.nullable(slidable$.SlideActionDelegate)),
    secondaryActionDelegate: dart.finalFieldType(dart.nullable(slidable$.SlideActionDelegate)),
    actionPane: dart.finalFieldType(framework.Widget),
    dismissal: dart.finalFieldType(dart.nullable(slidable_dismissal.SlidableDismissal)),
    actionExtentRatio: dart.finalFieldType(core.double),
    direction: dart.finalFieldType(basic_types.Axis),
    showAllActionsThreshold: dart.finalFieldType(core.double),
    movementDuration: dart.finalFieldType(core.Duration),
    closeOnScroll: dart.finalFieldType(core.bool),
    enabled: dart.finalFieldType(core.bool),
    fastThreshold: dart.finalFieldType(core.double)
  }));
  var __SlidableState__overallMoveController = dart.privateName(slidable$, "_#SlidableState#_overallMoveController");
  var __SlidableState__overallMoveController_isSet = dart.privateName(slidable$, "_#SlidableState#_overallMoveController#isSet");
  var _actionsMoveAnimation = dart.privateName(slidable$, "_actionsMoveAnimation");
  var _dismissAnimation = dart.privateName(slidable$, "_dismissAnimation");
  var _resizeController = dart.privateName(slidable$, "_resizeController");
  var _resizeAnimation = dart.privateName(slidable$, "_resizeAnimation");
  var _dragExtent = dart.privateName(slidable$, "_dragExtent");
  var _renderingMode = dart.privateName(slidable$, "_renderingMode");
  var _scrollPosition = dart.privateName(slidable$, "_scrollPosition");
  var _dragUnderway = dart.privateName(slidable$, "_dragUnderway");
  var _sizePriorToCollapse = dart.privateName(slidable$, "_sizePriorToCollapse");
  var _dismissing = dart.privateName(slidable$, "_dismissing");
  var _actionType = dart.privateName(slidable$, "_actionType");
  var _overallMoveController = dart.privateName(slidable$, "_overallMoveController");
  var _handleDismissStatusChanged = dart.privateName(slidable$, "_handleDismissStatusChanged");
  var _handleOverallPositionChanged = dart.privateName(slidable$, "_handleOverallPositionChanged");
  var _initAnimations = dart.privateName(slidable$, "_initAnimations");
  var _handleShowAllActionsStatusChanged = dart.privateName(slidable$, "_handleShowAllActionsStatusChanged");
  var _totalActionsExtent = dart.privateName(slidable$, "_totalActionsExtent");
  var _actionDelegate = dart.privateName(slidable$, "_actionDelegate");
  var _actionCount = dart.privateName(slidable$, "_actionCount");
  var _dismissThreshold = dart.privateName(slidable$, "_dismissThreshold");
  var _dismissible = dart.privateName(slidable$, "_dismissible");
  var _directionIsXAxis = dart.privateName(slidable$, "_directionIsXAxis");
  var _overallDragAxisExtent = dart.privateName(slidable$, "_overallDragAxisExtent");
  var _actionsDragAxisExtent = dart.privateName(slidable$, "_actionsDragAxisExtent");
  var _removeScrollingNotifierListener = dart.privateName(slidable$, "_removeScrollingNotifierListener");
  var _addScrollingNotifierListener = dart.privateName(slidable$, "_addScrollingNotifierListener");
  var _isScrollingListener = dart.privateName(slidable$, "_isScrollingListener");
  var _handleDragStart = dart.privateName(slidable$, "_handleDragStart");
  var _handleDragUpdate = dart.privateName(slidable$, "_handleDragUpdate");
  var _handleDragEnd = dart.privateName(slidable$, "_handleDragEnd");
  var _startResizeAnimation = dart.privateName(slidable$, "_startResizeAnimation");
  var _handleDismiss = dart.privateName(slidable$, "_handleDismiss");
  var _handleResizeProgressChanged = dart.privateName(slidable$, "_handleResizeProgressChanged");
  const State_TickerProviderStateMixin$36 = class State_TickerProviderStateMixin extends framework.State$(slidable$.Slidable) {};
  (State_TickerProviderStateMixin$36.new = function() {
    ticker_provider.TickerProviderStateMixin$(slidable$.Slidable)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36, ticker_provider.TickerProviderStateMixin$(slidable$.Slidable));
  const State_AutomaticKeepAliveClientMixin$36 = class State_AutomaticKeepAliveClientMixin extends State_TickerProviderStateMixin$36 {};
  (State_AutomaticKeepAliveClientMixin$36.new = function() {
    automatic_keep_alive.AutomaticKeepAliveClientMixin$(slidable$.Slidable)[dart.mixinNew].call(this);
    State_AutomaticKeepAliveClientMixin$36.__proto__.new.call(this);
  }).prototype = State_AutomaticKeepAliveClientMixin$36.prototype;
  dart.applyMixin(State_AutomaticKeepAliveClientMixin$36, automatic_keep_alive.AutomaticKeepAliveClientMixin$(slidable$.Slidable));
  slidable$.SlidableState = class SlidableState extends State_AutomaticKeepAliveClientMixin$36 {
    initState() {
      let t0;
      super.initState();
      this[_overallMoveController] = (t0 = new animation_controller.AnimationController.new({duration: this.widget.movementDuration, vsync: this}), (() => {
        t0.addStatusListener(dart.bind(this, _handleDismissStatusChanged));
        t0.addListener(dart.bind(this, _handleOverallPositionChanged));
        return t0;
      })());
      this[_initAnimations]();
    }
    [_initAnimations]() {
      let t0, t0$, t0$0, t0$1;
      t0 = this[_actionsMoveAnimation];
      t0 == null ? null : t0.removeStatusListener(dart.bind(this, _handleShowAllActionsStatusChanged));
      t0$ = this[_dismissAnimation];
      t0$ == null ? null : t0$.removeStatusListener(dart.bind(this, _handleShowAllActionsStatusChanged));
      this[_actionsMoveAnimation] = (t0$0 = new animations.CurvedAnimation.new({parent: this[_overallMoveController], curve: new curves.Interval.new(0.0, this[_totalActionsExtent])}), (() => {
        t0$0.addStatusListener(dart.bind(this, _handleShowAllActionsStatusChanged));
        return t0$0;
      })());
      this[_dismissAnimation] = (t0$1 = new animations.CurvedAnimation.new({parent: this[_overallMoveController], curve: new curves.Interval.new(this[_totalActionsExtent], 1.0)}), (() => {
        t0$1.addStatusListener(dart.bind(this, _handleShowAllActionsStatusChanged));
        return t0$1;
      })());
    }
    get [_overallMoveController]() {
      let t0;
      return dart.test(this[__SlidableState__overallMoveController_isSet]) ? (t0 = this[__SlidableState__overallMoveController], t0) : dart.throw(new _internal.LateError.fieldNI("_overallMoveController"));
    }
    set [_overallMoveController](t0) {
      if (t0 == null) dart.nullFailed(I[2], 572, 34, "null");
      if (dart.test(this[__SlidableState__overallMoveController_isSet]))
        dart.throw(new _internal.LateError.fieldAI("_overallMoveController"));
      else {
        this[__SlidableState__overallMoveController_isSet] = true;
        this[__SlidableState__overallMoveController] = t0;
      }
    }
    get overallMoveAnimation() {
      return this[_overallMoveController].view;
    }
    get renderingMode() {
      return this[_renderingMode];
    }
    get actionType() {
      return this[_actionType];
    }
    set actionType(value) {
      this[_actionType] = value;
      this[_initAnimations]();
    }
    get [_actionCount]() {
      let t1, t1$;
      t1$ = (t1 = this[_actionDelegate], t1 == null ? null : t1.actionCount);
      return t1$ == null ? 0 : t1$;
    }
    get [_totalActionsExtent]() {
      return dart.notNull(this.widget.actionExtentRatio) * dart.notNull(this[_actionCount]);
    }
    get [_dismissThreshold]() {
      let t1;
      if (this.widget.dismissal == null) {
        return 0.75;
      } else {
        t1 = dart.nullCheck(this.widget.dismissal).dismissThresholds[$_get](dart.nullCheck(this.actionType));
        return t1 == null ? 0.75 : t1;
      }
    }
    get [_dismissible]() {
      return this.widget.dismissal != null && dart.notNull(this[_dismissThreshold]) < 1.0;
    }
    get wantKeepAlive() {
      let t1;
      return !dart.test(this.widget.closeOnScroll) && (this[_overallMoveController].isAnimating === true || (t1 = this[_resizeController], t1 == null ? null : t1.isAnimating) === true);
    }
    get [_actionDelegate]() {
      return this.actionType == slidable$.SlideActionType.primary ? this.widget.actionDelegate : this.widget.secondaryActionDelegate;
    }
    get [_directionIsXAxis]() {
      return this.widget.direction == basic_types.Axis.horizontal;
    }
    get [_overallDragAxisExtent]() {
      let size = this.context.size;
      return dart.test(this[_directionIsXAxis]) ? dart.nullCheck(size).width : dart.nullCheck(size).height;
    }
    get [_actionsDragAxisExtent]() {
      return dart.notNull(this[_overallDragAxisExtent]) * dart.notNull(this[_totalActionsExtent]);
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[_removeScrollingNotifierListener]();
      this[_addScrollingNotifierListener]();
    }
    didUpdateWidget(oldWidget) {
      slidable$.Slidable.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[2], 652, 33, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (this.widget.closeOnScroll != oldWidget.closeOnScroll) {
        this[_removeScrollingNotifierListener]();
        this[_addScrollingNotifierListener]();
      }
    }
    [_addScrollingNotifierListener]() {
      let t1;
      if (dart.test(this.widget.closeOnScroll)) {
        this[_scrollPosition] = (t1 = scrollable.Scrollable.of(this.context), t1 == null ? null : t1.position);
        if (this[_scrollPosition] != null) {
          dart.nullCheck(this[_scrollPosition]).isScrollingNotifier.addListener(dart.bind(this, _isScrollingListener));
        }
      }
    }
    [_removeScrollingNotifierListener]() {
      if (this[_scrollPosition] != null) {
        dart.nullCheck(this[_scrollPosition]).isScrollingNotifier.removeListener(dart.bind(this, _isScrollingListener));
      }
    }
    dispose() {
      let t1, t1$;
      this[_overallMoveController].dispose();
      t1 = this[_resizeController];
      t1 == null ? null : t1.dispose();
      this[_removeScrollingNotifierListener]();
      t1$ = this.widget.controller;
      t1$ == null ? null : t1$[_activeState] = null;
      super.dispose();
    }
    open(opts) {
      let t1;
      let actionType = opts && 'actionType' in opts ? opts.actionType : null;
      t1 = this.widget.controller;
      t1 == null ? null : t1.activeState = this;
      if (actionType != null && this[_actionType] != actionType) {
        this.setState(dart.fn(() => {
          this.actionType = actionType;
        }, T.VoidTovoid()));
      }
      if (dart.notNull(this[_actionCount]) > 0) {
        this[_overallMoveController].animateTo(this[_totalActionsExtent], {curve: curves.Curves.easeIn, duration: this.widget.movementDuration});
      }
    }
    close() {
      let t1, t1$;
      if (!dart.test(this[_overallMoveController].isDismissed)) {
        if (dart.equals((t1 = this.widget.controller, t1 == null ? null : t1.activeState), this)) {
          t1$ = this.widget.controller;
          t1$ == null ? null : t1$.activeState = null;
        } else {
          this[_flingAnimationController]();
        }
      }
    }
    [_flingAnimationController]() {
      if (!dart.test(this[_dismissing])) {
        this[_overallMoveController].fling({velocity: -1.0});
      }
    }
    dismiss(opts) {
      let actionType = opts && 'actionType' in opts ? opts.actionType : null;
      if (dart.test(this[_dismissible])) {
        this[_dismissing] = true;
        actionType == null ? actionType = this[_actionType] : null;
        if (actionType != this[_actionType]) {
          this.setState(dart.fn(() => {
            this.actionType = actionType;
          }, T.VoidTovoid()));
        }
        this[_overallMoveController].fling();
      }
    }
    [_isScrollingListener]() {
      if (!dart.test(this.widget.closeOnScroll) || this[_scrollPosition] == null) {
        return;
      }
      if (dart.test(dart.nullCheck(this[_scrollPosition]).isScrollingNotifier.value)) {
        this.close();
      }
    }
    [_handleDragStart](details) {
      let t1;
      if (details == null) dart.nullFailed(I[2], 750, 42, "details");
      this[_dragUnderway] = true;
      t1 = this.widget.controller;
      t1 == null ? null : t1.activeState = this;
      this[_dragExtent] = dart.notNull(dart.nullCheck(this[_actionsMoveAnimation]).value) * dart.notNull(this[_actionsDragAxisExtent]) * this[_dragExtent][$sign];
      if (dart.test(this[_overallMoveController].isAnimating)) {
        this[_overallMoveController].stop();
      }
    }
    [_handleDragUpdate](details) {
      if (details == null) dart.nullFailed(I[2], 761, 44, "details");
      if (this.widget.controller != null && !dart.equals(dart.nullCheck(this.widget.controller).activeState, this)) {
        return;
      }
      let delta = dart.nullCheck(details.primaryDelta);
      this[_dragExtent] = dart.notNull(this[_dragExtent]) + delta;
      this.setState(dart.fn(() => {
        this.actionType = this[_dragExtent][$sign] >= 0 ? slidable$.SlideActionType.primary : slidable$.SlideActionType.secondary;
        if (dart.notNull(this[_actionCount]) > 0) {
          if (dart.test(this[_dismissible]) && !dart.test(dart.nullCheck(this.widget.dismissal).dragDismissible)) {
            this[_overallMoveController].value = (this[_dragExtent][$abs]() / dart.notNull(this[_overallDragAxisExtent]))[$clamp](0.0, this[_totalActionsExtent])[$toDouble]();
          } else {
            this[_overallMoveController].value = this[_dragExtent][$abs]() / dart.notNull(this[_overallDragAxisExtent]);
          }
        }
      }, T.VoidTovoid()));
    }
    [_handleDragEnd](details) {
      if (details == null) dart.nullFailed(I[2], 788, 38, "details");
      if (this.widget.controller != null && !dart.equals(dart.nullCheck(this.widget.controller).activeState, this)) {
        return;
      }
      this[_dragUnderway] = false;
      let velocity = dart.nullCheck(details.primaryVelocity);
      let shouldOpen = velocity[$sign] === this[_dragExtent][$sign];
      let fast = velocity[$abs]() > dart.notNull(this.widget.fastThreshold);
      if (dart.test(this[_dismissible]) && dart.notNull(this.overallMoveAnimation.value) > dart.notNull(this[_totalActionsExtent])) {
        if (dart.notNull(this.overallMoveAnimation.value) >= dart.notNull(this[_dismissThreshold])) {
          this.dismiss();
        } else {
          this.open();
        }
      } else if (dart.notNull(dart.nullCheck(this[_actionsMoveAnimation]).value) >= dart.notNull(this.widget.showAllActionsThreshold) || shouldOpen && fast) {
        this.open();
      } else {
        this.close();
      }
    }
    [_handleShowAllActionsStatusChanged](status) {
      if (status == null) dart.nullFailed(I[2], 813, 59, "status");
      if (status == animation.AnimationStatus.completed || status == animation.AnimationStatus.dismissed) {
        this.setState(dart.fn(() => {
        }, T.VoidTovoid()));
      }
      this.updateKeepAlive();
    }
    [_handleOverallPositionChanged]() {
      let value = this[_overallMoveController].value;
      if (value == this[_overallMoveController].lowerBound) {
        this[_renderingMode] = slidable$.SlidableRenderingMode.none;
      } else if (dart.notNull(value) <= dart.notNull(this[_totalActionsExtent])) {
        this[_renderingMode] = slidable$.SlidableRenderingMode.slide;
      } else {
        this[_renderingMode] = slidable$.SlidableRenderingMode.dismiss;
      }
      this.setState(dart.fn(() => {
      }, T.VoidTovoid()));
    }
    [_handleDismissStatusChanged](status) {
      if (status == null) dart.nullFailed(I[2], 837, 60, "status");
      return async.async(dart.void, (function* _handleDismissStatusChanged() {
        let t1;
        if (dart.test(this[_dismissible])) {
          if (status == animation.AnimationStatus.completed && this[_overallMoveController].value == this[_overallMoveController].upperBound && !dart.test(this[_dragUnderway])) {
            if (dart.nullCheck(this.widget.dismissal).onWillDismiss == null || dart.test(yield dart.nullCheck(dart.nullCheck(this.widget.dismissal).onWillDismiss)(this.actionType))) {
              this[_startResizeAnimation]();
            } else {
              this[_dismissing] = false;
              if ((t1 = this.widget.dismissal, t1 == null ? null : t1.closeOnCanceled) === true) {
                this.close();
              } else {
                this.open();
              }
            }
          }
          this.updateKeepAlive();
        }
      }).bind(this));
    }
    [_handleDismiss]() {
      let t1;
      t1 = this.widget.controller;
      t1 == null ? null : t1.activeState = null;
      let dismissal = dart.nullCheck(this.widget.dismissal);
      if (dismissal.onDismissed != null) {
        if (!(this.actionType != null)) dart.assertFailed(null, I[2], 862, 14, "actionType != null");
        dart.nullCheck(dismissal.onDismissed)(this.actionType);
      }
    }
    [_startResizeAnimation]() {
      let t1;
      if (!dart.test(this[_overallMoveController].isCompleted)) dart.assertFailed(null, I[2], 868, 12, "_overallMoveController.isCompleted");
      if (!(this[_resizeController] == null)) dart.assertFailed(null, I[2], 869, 12, "_resizeController == null");
      if (!(this[_sizePriorToCollapse] == null)) dart.assertFailed(null, I[2], 870, 12, "_sizePriorToCollapse == null");
      let dismissal = dart.nullCheck(this.widget.dismissal);
      if (dismissal.resizeDuration == null) {
        this[_handleDismiss]();
      } else {
        this[_resizeController] = (t1 = new animation_controller.AnimationController.new({duration: dismissal.resizeDuration, vsync: this}), (() => {
          t1.addListener(dart.bind(this, _handleResizeProgressChanged));
          t1.addStatusListener(dart.fn(status => {
            if (status == null) dart.nullFailed(I[2], 878, 50, "status");
            return this.updateKeepAlive();
          }, T.AnimationStatusTovoid()));
          return t1;
        })());
        dart.nullCheck(this[_resizeController]).forward();
        this.setState(dart.fn(() => {
          this[_renderingMode] = slidable$.SlidableRenderingMode.resize;
          this[_sizePriorToCollapse] = this.context.size;
          this[_resizeAnimation] = new (T.TweenOfdouble()).new({begin: 1.0, end: 0.0}).animate(new animations.CurvedAnimation.new({parent: dart.nullCheck(this[_resizeController]), curve: slidable$._kResizeTimeCurve}));
        }, T.VoidTovoid()));
      }
    }
    [_handleResizeProgressChanged]() {
      let t1;
      if (dart.test(dart.nullCheck(this[_resizeController]).isCompleted)) {
        this[_handleDismiss]();
      } else {
        t1 = dart.nullCheck(this.widget.dismissal).onResize;
        t1 == null ? null : t1();
      }
    }
    build(context) {
      if (context == null) dart.nullFailed(I[2], 899, 29, "context");
      super.build(context);
      let content = this.widget.child;
      if (!(!dart.test(this.widget.enabled) || (this.widget.actionDelegate == null || dart.nullCheck(this.widget.actionDelegate).actionCount === 0) && (this.widget.secondaryActionDelegate == null || dart.nullCheck(this.widget.secondaryActionDelegate).actionCount === 0))) {
        if (this.actionType == slidable$.SlideActionType.primary && this.widget.actionDelegate != null && dart.notNull(dart.nullCheck(this.widget.actionDelegate).actionCount) > 0 || this.actionType == slidable$.SlideActionType.secondary && this.widget.secondaryActionDelegate != null && dart.notNull(dart.nullCheck(this.widget.secondaryActionDelegate).actionCount) > 0) {
          if (dart.test(this[_dismissible])) {
            content = this.widget.dismissal;
            if (this[_resizeAnimation] != null) {
              if (!dart.test(dart.fn(() => {
                if (dart.nullCheck(this[_resizeAnimation]).status != animation.AnimationStatus.forward) {
                  if (!(dart.nullCheck(this[_resizeAnimation]).status == animation.AnimationStatus.completed)) dart.assertFailed(null, I[2], 922, 24, "_resizeAnimation!.status == AnimationStatus.completed");
                  dart.throw(assertions.FlutterError.new("A dismissed Slidable widget is still part of the tree.\n" + "Make sure to implement the onDismissed handler and to immediately remove the Slidable\n" + "widget from the application once that handler has fired."));
                }
                return true;
              }, T.VoidTobool())())) dart.assertFailed(null, I[2], 920, 20, "() {\r\n              if (_resizeAnimation!.status != AnimationStatus.forward) {\r\n                assert(_resizeAnimation!.status == AnimationStatus.completed);\r\n                throw FlutterError(\r\n                    'A dismissed Slidable widget is still part of the tree.\\n'\r\n                    'Make sure to implement the onDismissed handler and to immediately remove the Slidable\\n'\r\n                    'widget from the application once that handler has fired.');\r\n              }\r\n              return true;\r\n            }()");
              content = new transitions.SizeTransition.new({sizeFactor: dart.nullCheck(this[_resizeAnimation]), axis: dart.test(this[_directionIsXAxis]) ? basic_types.Axis.vertical : basic_types.Axis.horizontal, child: new basic.SizedBox.new({width: dart.nullCheck(this[_sizePriorToCollapse]).width, height: dart.nullCheck(this[_sizePriorToCollapse]).height, child: content, $creationLocationd_0dea112b090073317d4: C[52] || CT.C52}), $creationLocationd_0dea112b090073317d4: C[57] || CT.C57});
            }
          } else {
            content = this.widget.actionPane;
          }
        }
        content = new gesture_detector.GestureDetector.new({onHorizontalDragStart: dart.test(this[_directionIsXAxis]) ? dart.bind(this, _handleDragStart) : null, onHorizontalDragUpdate: dart.test(this[_directionIsXAxis]) ? dart.bind(this, _handleDragUpdate) : null, onHorizontalDragEnd: dart.test(this[_directionIsXAxis]) ? dart.bind(this, _handleDragEnd) : null, onVerticalDragStart: dart.test(this[_directionIsXAxis]) ? null : dart.bind(this, _handleDragStart), onVerticalDragUpdate: dart.test(this[_directionIsXAxis]) ? null : dart.bind(this, _handleDragUpdate), onVerticalDragEnd: dart.test(this[_directionIsXAxis]) ? null : dart.bind(this, _handleDragEnd), behavior: proxy_box.HitTestBehavior.opaque, child: content, $creationLocationd_0dea112b090073317d4: C[62] || CT.C62});
      }
      return new slidable$._SlidableScope.new({state: this, child: new slidable$.SlidableData.new({actionType: this.actionType, renderingMode: this[_renderingMode], totalActionsExtent: this[_totalActionsExtent], dismissThreshold: this[_dismissThreshold], dismissible: this[_dismissible], actionDelegate: this[_actionDelegate], overallMoveAnimation: this.overallMoveAnimation, actionsMoveAnimation: this[_actionsMoveAnimation], dismissAnimation: this[_dismissAnimation], slidable: this.widget, actionExtentRatio: this.widget.actionExtentRatio, direction: this.widget.direction, child: content, $creationLocationd_0dea112b090073317d4: C[72] || CT.C72}), $creationLocationd_0dea112b090073317d4: C[87] || CT.C87});
    }
  };
  (slidable$.SlidableState.new = function() {
    this[__SlidableState__overallMoveController] = null;
    this[__SlidableState__overallMoveController_isSet] = false;
    this[_actionsMoveAnimation] = null;
    this[_dismissAnimation] = null;
    this[_resizeController] = null;
    this[_resizeAnimation] = null;
    this[_dragExtent] = 0.0;
    this[_renderingMode] = slidable$.SlidableRenderingMode.none;
    this[_scrollPosition] = null;
    this[_dragUnderway] = false;
    this[_sizePriorToCollapse] = null;
    this[_dismissing] = false;
    this[_actionType] = slidable$.SlideActionType.primary;
    slidable$.SlidableState.__proto__.new.call(this);
    ;
  }).prototype = slidable$.SlidableState.prototype;
  dart.addTypeTests(slidable$.SlidableState);
  dart.addTypeCaches(slidable$.SlidableState);
  dart.setMethodSignature(slidable$.SlidableState, () => ({
    __proto__: dart.getMethods(slidable$.SlidableState.__proto__),
    [_initAnimations]: dart.fnType(dart.void, []),
    [_addScrollingNotifierListener]: dart.fnType(dart.void, []),
    [_removeScrollingNotifierListener]: dart.fnType(dart.void, []),
    open: dart.fnType(dart.void, [], {actionType: dart.nullable(slidable$.SlideActionType)}, {}),
    close: dart.fnType(dart.void, []),
    [_flingAnimationController]: dart.fnType(dart.void, []),
    dismiss: dart.fnType(dart.void, [], {actionType: dart.nullable(slidable$.SlideActionType)}, {}),
    [_isScrollingListener]: dart.fnType(dart.void, []),
    [_handleDragStart]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [_handleDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_handleDragEnd]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    [_handleShowAllActionsStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
    [_handleOverallPositionChanged]: dart.fnType(dart.void, []),
    [_handleDismissStatusChanged]: dart.fnType(async.Future$(dart.void), [animation.AnimationStatus]),
    [_handleDismiss]: dart.fnType(dart.void, []),
    [_startResizeAnimation]: dart.fnType(dart.void, []),
    [_handleResizeProgressChanged]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(slidable$.SlidableState, () => ({
    __proto__: dart.getGetters(slidable$.SlidableState.__proto__),
    [_overallMoveController]: animation_controller.AnimationController,
    overallMoveAnimation: animation.Animation$(core.double),
    renderingMode: slidable$.SlidableRenderingMode,
    actionType: dart.nullable(slidable$.SlideActionType),
    [_actionCount]: core.int,
    [_totalActionsExtent]: core.double,
    [_dismissThreshold]: core.double,
    [_dismissible]: core.bool,
    wantKeepAlive: core.bool,
    [_actionDelegate]: dart.nullable(slidable$.SlideActionDelegate),
    [_directionIsXAxis]: core.bool,
    [_overallDragAxisExtent]: core.double,
    [_actionsDragAxisExtent]: core.double
  }));
  dart.setSetterSignature(slidable$.SlidableState, () => ({
    __proto__: dart.getSetters(slidable$.SlidableState.__proto__),
    [_overallMoveController]: animation_controller.AnimationController,
    actionType: dart.nullable(slidable$.SlideActionType)
  }));
  dart.setLibraryUri(slidable$.SlidableState, I[3]);
  dart.setFieldSignature(slidable$.SlidableState, () => ({
    __proto__: dart.getFields(slidable$.SlidableState.__proto__),
    [__SlidableState__overallMoveController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [__SlidableState__overallMoveController_isSet]: dart.fieldType(core.bool),
    [_actionsMoveAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [_dismissAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [_resizeController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [_resizeAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [_dragExtent]: dart.fieldType(core.double),
    [_renderingMode]: dart.fieldType(slidable$.SlidableRenderingMode),
    [_scrollPosition]: dart.fieldType(dart.nullable(scroll_position.ScrollPosition)),
    [_dragUnderway]: dart.fieldType(core.bool),
    [_sizePriorToCollapse]: dart.fieldType(dart.nullable(ui.Size)),
    [_dismissing]: dart.fieldType(core.bool),
    [_actionType]: dart.fieldType(dart.nullable(slidable$.SlideActionType))
  }));
  var Cubic_d = dart.privateName(curves, "Cubic.d");
  var Cubic_c = dart.privateName(curves, "Cubic.c");
  var Cubic_b = dart.privateName(curves, "Cubic.b");
  var Cubic_a = dart.privateName(curves, "Cubic.a");
  var Interval_curve = dart.privateName(curves, "Interval.curve");
  var Interval_end = dart.privateName(curves, "Interval.end");
  var Interval_begin = dart.privateName(curves, "Interval.begin");
  dart.defineLazy(slidable$, {
    /*slidable$._kActionsExtentRatio*/get _kActionsExtentRatio() {
      return 0.25;
    },
    /*slidable$._kFastThreshold*/get _kFastThreshold() {
      return 2500;
    },
    /*slidable$._kDismissThreshold*/get _kDismissThreshold() {
      return 0.75;
    },
    /*slidable$._kResizeTimeCurve*/get _kResizeTimeCurve() {
      return C[91] || CT.C91;
    },
    /*slidable$._kMovementDuration*/get _kMovementDuration() {
      return C[50] || CT.C50;
    }
  }, false);
  dart.trackLibraries("packages/flutter_slidable/src/widgets/slidable_dismissal.dart", {
    "package:flutter_slidable/src/widgets/slidable_dismissal.dart": slidable_dismissal,
    "package:flutter_slidable/src/widgets/slidable.dart": slidable$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["slidable_dismissal.dart","slidable.dart"],"names":[],"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","file":"../../../../../../../../../../../../packages/flutter_slidable/src/widgets/slidable_dismissal.dart.lib.js"}');
  // Exports:
  return {
    src__widgets__slidable_dismissal: slidable_dismissal,
    src__widgets__slidable: slidable$
  };
}));

//# sourceMappingURL=slidable_dismissal.dart.lib.js.map
